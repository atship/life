1, There are several times misspell the word, and bug occurs.
    eg.
    <car
        name="newbie"
        qteTimer=".5"
    />
    <car
        name="good"
        qtetimer=".6"
    />
   the word "qteTimer" is not "qtetimer", don't trust yourself when you find that the same code causes different results.

2, The initializer is very important
    eg.
    defined a pointer in header file:
    Class* obj_;

    using the pointer in source file without initialize:
    if (obj_)
        obj_->DoSomething(); // will cause crash in windows system and android system.

    initialize it with 0, then the code would be ok, because it is empty, the system will skip it
    obj_ = 0;

3, Understand the mechanism is very important.
    1, The timesaving behavior is that, known it's behavior, without guess. I know, it's painful to do this. But this is a quickly way to use a knowledge and avoid many many bugs.
    2, You can search it in the network, ask someone for help. It's still painful because there are so many infomations that I don't know how to learn. Just do it.
    3, You can test it again and again, if you can't walk into. Especially you don't know the mechanism. Try and guess and test. This is the final way. Not recommend.
    
4, Humble in the face of GOD.
    1, The more conceited, the more failure you will get.
    2, The more Humble, the more works you can do, because you will working serious, no matter the working is important or not.

5, 想做的东西太多，在惶惶然的时候，时间就溜掉了。不如选中一个，迅速上手，各个击破。总结并联接各个部分。
    本次做脚本编辑器，先后两次，更改架构，还是发现数据结构选得不对，表达式使用树是够用的，但结点结构无法扩展，因为我根本就不知道需要从C＃映射到其它语言，没有考虑到这一点，结构难免不断更改，因为编译的时候发现又少了东西了。
    搞清楚自己到底要什么，这个是很痛苦的过程，但不得不去做，否则就是现在的情况，无法扩展，处处受限制。